import { TsconfigPathsPlugin } from '@esbuild-plugins/tsconfig-paths';
import esbuild from 'esbuild';
import { Lithia } from 'lithia/types';
import path from 'node:path';
import { getOutputPath } from '../_utils';
import { ready, wait } from '../log';
import { scanServerRoutes } from '../scan';
import { createRoutesManifest } from '../server/router';
import { printRoutesOverview } from './build';

export async function buildProd(lithia: Lithia) {
  wait('Building your Lithia app for production...');

  const routes = await scanServerRoutes(lithia);

  await Promise.all(
    routes.map(async (route) => {
      await esbuild.build({
        entryPoints: [route.filePath],
        bundle: true,
        outdir: path.dirname(getOutputPath(lithia, route.filePath)),
        platform: 'node',
        format: 'esm',
        packages: 'external',
        sourcemap: true,
        minify: true,
        keepNames: true,
        plugins: [
          TsconfigPathsPlugin({
            tsconfig: path.join(process.cwd(), 'tsconfig.json'),
          }),
        ],
        banner: {
          js: `
/**
 * @PROD
 * 
 * This file was generated by Lithia. (lithia start)
 * Do not edit this file directly.
 * 
 * Learn more at https://lithiajs.com
 * 
 * Route {
 *  env: ${route.env || 'all'}
 *  path: ${route.path}
 *  method: ${route.method || 'all'}
 *  dynamic: ${route.dynamic}
 * }
 * */
           `,
        },
      });
    }),
  );

  await createRoutesManifest(lithia, routes);
  printRoutesOverview(routes);

  ready(`${routes.length} routes have been built successfully!`);
}
